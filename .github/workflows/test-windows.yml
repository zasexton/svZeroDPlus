name: test-windows.yml
on:
  workflow_dispatch:

jobs:
  test-windows:
    runs-on: windows-latest
    env:
      CONDA_ENV: zerod
      PYTHONPATH: ${{ github.workspace }} 

    steps:
      - uses: actions/checkout@v4

      - name: Set up miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          activate-environment: ${{env.CONDA_ENV}}
          python-version: "3.11.4"

      - name: Install Conda & Python dependencies
        shell: pwsh
        run: |
          # choco install mingw --no-progress
          conda install -y -c conda-forge cmake
          # ---- make wrapper for cmake_setuptools -------------------------
          $wrapper = Join-Path $Env:USERPROFILE 'make.bat'
          @'
          @echo off
          rem %1="-j", %2="pysvzerod"
          set TARGET=%2
          echo [make.bat] building %TARGET% ...
          cmake --build . --config Release --target %TARGET%
          '@ | Out-File -Encoding ASCII $wrapper

          echo "$Env:USERPROFILE" >> $Env:GITHUB_PATH   # prepend your wrapper dir to PATH
          
          pip install --upgrade cmake-setuptools
          pip install --no-build-isolation -v .[dev]
          pip install networkx
          pip show pysvzerod
          dir

      - name: Debug installed pysvzerod
        shell: pwsh
        run: |
          Write-Host "=== pip show pysvzerod ==="
          pip show pysvzerod || Write-Host "  → pysvzerod is not installed"

          Write-Host "`n=== site‑packages path ==="
          $site = python -c "import sysconfig; print(sysconfig.get_paths()['purelib'])"
          Write-Host "  $site"

          Write-Host "`n=== Files in site‑packages matching pysvzerod* ==="
          Get-ChildItem "$site\pysvzerod*" -Recurse -ErrorAction SilentlyContinue |
          ForEach-Object { Write-Host "  $_.FullName" }

          Write-Host "`n=== Look for any *.pyd or *.so in project ==="
          Get-ChildItem -Recurse D:\a\svZeroDPlus\svZeroDPlus\build | Where-Object { $_.Name -like "*.pyd" -or $_.Name -like "*.so" } |
          ForEach-Object { Write-Host "  Built → $($_.FullName)" }

          Write-Host "`n=== Look for compiled extension ==="
          Get-ChildItem -Recurse $site | Where-Object { $_.Name -like "pysvzerod*.pyd" -or $_.Name -like "pysvzerod*.so" } |
          ForEach-Object { Write-Host "  Found → $($_.FullName)" }

          Write-Host "`n=== Try a quick import ==="
          python -c "import pysvzerod; print('OK →', pysvzerod.__file__)" ||
          Write-Host "  → import pysvzerod failed"

      - name: Run unit tests
        shell: pwsh
        run: pytest -v --durations=0 --ignore=test_dirgraph.py

      # 5. Configure & build C++ with MinGW Makefiles
      - name: Configure & build C++
        shell: pwsh
        working-directory: svZeroDPlus
        run: |
          mkdir build
          cd build
          cmake -G "MinGW Makefiles" `
                -DCMAKE_BUILD_TYPE=Release `
                -DENABLE_DISTRIBUTION=ON `
                ..
          cmake --build . --parallel 2

      # 6. Build & run the interface tests
      - name: Build & run interface tests
        shell: pwsh
        working-directory: svZeroDPlus
        run: |
          cd tests\test_interface

          mkdir build_tests
          cd build_tests
          cmake -G "MinGW Makefiles" ..
          cmake --build . --parallel 2

          # Run the two executables:
          .\test_01\svZeroD_interface_test01.exe `
            ..\..\build `
            .\test_01\svzerod_3Dcoupling.json

          .\test_02\svZeroD_interface_test02.exe `
            ..\..\build `
            .\test_02\svzerod_tuned.json
          
      # 7. Package with CPack
      - name: Build installer (CPack)
        shell: pwsh
        working-directory: svZeroDPlus
        run: |
          cd build
          cpack
          Copy-Item distribution\svZeroDSolver_* -Destination ..\

      # 8. Upload the installer artifact
      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: svZeroDSolver_*
          if-no-files-found: error
